<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Concepts on</title><link>https://hit.yolo42.com/docs/concepts/</link><description>Recent content in Concepts on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://hit.yolo42.com/docs/concepts/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://hit.yolo42.com/docs/concepts/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hit.yolo42.com/docs/concepts/introduction/</guid><description>What is hit? # Hit lets you express complex HTTP requests in plain text files and create workflows out of these requests. It allows you to express complex requests as composition of responses from previous HTTP requests.
How does it work? # Requests are defined in hit files. Hit can be compared with GUI-based tools like Postman, Insomnia, Paw, etc. Hit attempts to solve a problem similar to these tools but using Unix philosophies and with a focus on a superior command-line experience.</description></item><item><title>Hit files</title><link>https://hit.yolo42.com/docs/concepts/hit-files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hit.yolo42.com/docs/concepts/hit-files/</guid><description>Requests are defined in hit files. Hit can be compared with GUI-based tools like Postman, Insomnia, Paw, etc. Hit attempts to solve a problem similar to these tools but using Unix philosophies and with a focus on a superior command-line experience.</description></item></channel></rss>