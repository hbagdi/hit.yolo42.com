<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on</title><link>https://hit.yolo42.com/docs/guides/</link><description>Recent content in Guides on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://hit.yolo42.com/docs/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Defining request templates</title><link>https://hit.yolo42.com/docs/guides/request-templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hit.yolo42.com/docs/guides/request-templates/</guid><description>Request templates are a core part of hit. Request templates are a &amp;ldquo;functional&amp;rdquo; approach to APIs. In this guide, we will go over how to create and use request templates.
Basics # At its core, templates allow for injection of dynamic values into a request. A template provides a structure of a request and places where variable-based substitution can be performed.
Please make sure that no .hit files are present in your current working directory.</description></item><item><title>Setup shell completion</title><link>https://hit.yolo42.com/docs/guides/shell-completion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hit.yolo42.com/docs/guides/shell-completion/</guid><description>Using hit with shell completions reduces the number of keystrokes required to execute a request by an order of magnitude.
To enable shell completion in your current shell:
source &amp;lt;(hit completion) Once enabled, press TAB to get a recommendation for all available request identifiers in the current working directory.
To set up completion permanently, please follow the instructions specific to your shell:
Bash # echo ' # enable shell completions for hit command # https://hit.</description></item><item><title>Using cached responses</title><link>https://hit.yolo42.com/docs/guides/cached-responses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hit.yolo42.com/docs/guides/cached-responses/</guid><description>hit caches responses from each request execution and elements of the response can be used to construct new requests using request templates. In this guide, we will go through some examples of how to use hit&amp;rsquo;s cache to construct requests.
Referencing cache in the template # Let&amp;rsquo;s start with a basic example:
echo ' @_global base_url=https://nodes.yolo42.com version=1 @gen-root-node POST /v1/node ~y2j title: &amp;quot;root-node&amp;quot; @create-node POST /v1/node ~hy2j title: &amp;quot;child-node&amp;quot; parent_id: &amp;quot;@gen-root-node.</description></item></channel></rss>